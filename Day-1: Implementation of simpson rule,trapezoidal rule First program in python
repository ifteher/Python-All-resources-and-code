import math
# Function to be integrated
def f(x):
    return x * x

# Trapezoidal Rule
def trapezoidal(a, b, n):
    h = (b - a) / n
    total = f(a) + f(b)
    
    for i in range(1, n):
        x = a + i * h
        total += 2 * f(x)
    
    return (h / 2) * total

# Simpson's 1/3 Rule
def simpsons_one_third(a, b, n):
    if n % 2 != 0:
        print("Simpson's 1/3 rule requires even number of intervals.")
        return -1

    h = (b - a) / n
    total = f(a) + f(b)

    for i in range(1, n):
        x = a + i * h
        total += (4 if i % 2 != 0 else 2) * f(x)

    return (h / 3) * total

# Simpson's 3/8 Rule
def simpsons_three_eighth(a, b, n):
    if n % 3 != 0:
        print("Simpson's 3/8 rule requires n to be a multiple of 3.")
        return -1

    h = (b - a) / n
    total = f(a) + f(b)

    for i in range(1, n):
        x = a + i * h
        total += (3 if i % 3 != 0 else 2) * f(x)

    return (3 * h / 8) * total

# Main function
def main():
    a = float(input("Enter lower limit a: "))
    b = float(input("Enter upper limit b: "))
    n = int(input("Enter number of intervals n: "))

    print("\nResults:")
    trap = trapezoidal(a, b, n)
    print(f"Trapezoidal Rule Result: {trap:.6f}")

    simpson13 = simpsons_one_third(a, b, n)
    if simpson13 != -1:
        print(f"Simpson's 1/3 Rule Result: {simpson13:.6f}")

    simpson38 = simpsons_three_eighth(a, b, n)
    if simpson38 != -1:
        print(f"Simpson's 3/8 Rule Result: {simpson38:.6f}")

# Run the program
if __name__ == "__main__":
    main()
